{"version":3,"file":"static/js/414.f1368593.chunk.js","mappings":"+KACA,QAA4B,yB,sBCY5B,MAkCA,EAlCqCA,EAAAA,MAAYC,IAC/C,MAAM,IAAEC,KAAQC,GAAcF,GAEvBG,EAAeC,IAAoBC,EAAAA,EAAAA,WAAS,GAE7CC,GAAWC,EAAAA,EAAAA,QAAyB,MAgB1C,OAbAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAuBC,aAAY,KAAO,IAADC,EACR,KAAjB,QAAhBA,EAAAL,EAASM,eAAO,IAAAD,OAAA,EAAhBA,EAAkBE,cACpBT,GAAiB,GACjBU,cAAcL,GAChB,GACC,KAEH,MAAO,KACLK,cAAcL,EAAqB,CACpC,GACA,KAGDM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACId,IAAiBe,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAC1BD,EAAAA,EAAAA,KAAA,SACEE,WAAWC,EAAAA,EAAAA,GAAW,GAAI,CAAE,CAACC,IAAoBnB,IACjDoB,IAAKjB,KACDJ,EACJD,IAAKA,MAEN,G","sources":["webpack://supplement-group-task/./src/shared/ui/Video/ui/Video.module.scss?20c0","shared/ui/Video/ui/Video.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"hideVideo\":\"Video_hideVideo__jOmPR\"};","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Loader } from '../../Loader';\r\nimport styles from './Video.module.scss';\r\nimport { classNames } from '../../../lib/classNames/classNames';\r\n\r\ninterface IVideoProps {\r\n  muted?: boolean;\r\n  autoPlay?: boolean;\r\n  preload?: string;\r\n  loop?: boolean;\r\n  src: string;\r\n}\r\n\r\nconst Video: React.FC<IVideoProps> = React.memo((props) => {\r\n  const { src, ...restProps } = props;\r\n\r\n  const [isVideoLoaded, setIsVideoLoaded] = useState(false);\r\n\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n\r\n  //При тестировании, обнаружил, что видео лагает, поэтому решил сделать так, чтобы оно показывалось исключительно, после полной загрузки\r\n  useEffect(() => {\r\n    const checkVideoLoadStatus = setInterval(() => {\r\n      if (videoRef.current?.readyState === 4) {\r\n        setIsVideoLoaded(true);\r\n        clearInterval(checkVideoLoadStatus);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(checkVideoLoadStatus);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {!isVideoLoaded && <Loader />}\r\n      <video\r\n        className={classNames('', { [styles.hideVideo]: !isVideoLoaded })}\r\n        ref={videoRef}\r\n        {...restProps}\r\n        src={src}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Video;\r\n"],"names":["React","props","src","restProps","isVideoLoaded","setIsVideoLoaded","useState","videoRef","useRef","useEffect","checkVideoLoadStatus","setInterval","_videoRef$current","current","readyState","clearInterval","_jsxs","_Fragment","children","_jsx","Loader","className","classNames","styles","ref"],"sourceRoot":""}